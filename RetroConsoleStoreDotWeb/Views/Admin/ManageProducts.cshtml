@model IEnumerable<RetroConsoleStoreDotDomain.Model.Product.ProductModelBack>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Manage Products";
}

<div class="manage-products-container">
    <div class="page-header">
        <h1 class="retro-font-pixel">Product Management</h1>
        <div class="header-actions">
            <a href="@Url.Action("AddProduct", "Admin")" class="action-btn add-btn">
                <span class="btn-icon"></span>
                Add New Product
            </a>
            <a href="@Url.Action("DashBoard", "Admin")" class="action-btn back-btn">
                <span class="btn-icon"></span>
                Dashboard
            </a>
        </div>
    </div>

    <div class="famicom-controller-ports">
        <span></span>
        <span></span>
    </div>

    <!-- Search and Filter Section -->
    <div class="search-filter-section">
        <div class="search-container">
            <form method="get" action="@Url.Action("ManageProducts", "Admin")" class="search-form">
                <div class="search-group">
                    <input type="text" name="search" value="@ViewBag.SearchTerm" placeholder="Search products..." class="search-input" />
                    <button type="submit" class="search-btn">Search</button>
                </div>
                <div class="filter-group">
                    <select name="brand" class="filter-select">
                        <option value="">All Brands</option>
                        @if(ViewBag.Brands != null)
                        {
                            foreach(var brand in (IEnumerable<string>)ViewBag.Brands)
                            {
                                <option value="@brand" @(ViewBag.SelectedBrand == brand ? "selected" : "")>@brand</option>
                            }
                        }
                    </select>
                    <select name="status" class="filter-select">
                        <option value="">All Status</option>
                        <option value="Active" @(ViewBag.SelectedStatus == "Active" ? "selected" : "")>Active</option>
                        <option value="Discontinued" @(ViewBag.SelectedStatus == "Discontinued" ? "selected" : "")>Discontinued</option>
                        <option value="Out of Stock" @(ViewBag.SelectedStatus == "Out of Stock" ? "selected" : "")>Out of Stock</option>
                    </select>
                </div>
            </form>
        </div>
    </div>

    <!-- Products Table -->
    <div class="products-table-container">
        @if (Model != null && Model.Any())
        {
            <table class="products-table">
                <thead>
                    <tr>
                        <th>Image</th>
                        <th>
                            <a href="@Url.Action("ManageProducts", "Admin", new { sort = "name", search = ViewBag.SearchTerm })" class="sort-link">
                                Name @(ViewBag.SortField == "name" ? (ViewBag.SortDirection == "asc" ? "â–²" : "â–¼") : "")
                            </a>
                        </th>
                        <th>Brand</th>
                        <th>
                            <a href="@Url.Action("ManageProducts", "Admin", new { sort = "price", search = ViewBag.SearchTerm })" class="sort-link">
                                Price @(ViewBag.SortField == "price" ? (ViewBag.SortDirection == "asc" ? "â–²" : "â–¼") : "")
                            </a>
                        </th>
                        <th>
                            <a href="@Url.Action("ManageProducts", "Admin", new { sort = "stock", search = ViewBag.SearchTerm })" class="sort-link">
                                Stock @(ViewBag.SortField == "stock" ? (ViewBag.SortDirection == "asc" ? "â–²" : "â–¼") : "")
                            </a>
                        </th>
                        <th>Status</th>
                        <th>Year</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Model)
                    {
                        <tr class="product-row">
                            <td class="image-cell">
                                <img src="@(string.IsNullOrEmpty(product.ImagePath) ? "/Content/images/Products/missing-picture-page-website-design-600nw-1552421075.webp" : product.ImagePath)" 
                                     alt="@product.Name" class="product-thumbnail" />
                            </td>
                            <td class="product-name">
                                <strong>@product.Name</strong>
                                <div class="product-description">@(product.Description?.Length > 50 ? product.Description.Substring(0, 50) + "..." : product.Description)</div>
                            </td>
                            <td>@product.Brand</td>
                            <td class="price-cell">$@product.Price.ToString("F2")</td>
                            <td class="stock-cell">
                                <span class="stock-badge @(product.StockQuantity <= 5 ? "low-stock" : product.StockQuantity == 0 ? "no-stock" : "in-stock")">
                                    @product.StockQuantity
                                </span>
                            </td>
                            <td>
                                <span class="status-badge @product.Status.ToLower().Replace(" ", "-")">@product.Status</span>
                            </td>
                            <td>@product.YearReleased</td>
                            <td class="actions-cell">
                                <div class="action-buttons">
                                    <a href="@Url.Action("EditProduct", "Admin", new { id = product.Id })" class="action-btn edit-btn" title="Edit">
                                        Edit
                                    </a>
                                    <a href="@Url.Action("ProductDetail", "Admin", new { id = product.Id })" class="action-btn view-btn" title="View" target="_blank">
                                        View
                                    </a>
                                    <a href="@Url.Action("DeleteProduct", "Admin", new { id = product.Id })" class="action-btn delete-btn" title="Delete" 
                                       onclick="return confirm('Are you sure you want to delete @product.Name? This action cannot be undone!')">
                                        Delete
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="no-products">
                <div class="retro-message-box">
                    <h3 class="retro-font-8bit">ðŸ“¦ No Products Found</h3>
                    <p>No products match your current filters.</p>
                    <a href="@Url.Action("AddProduct", "Admin")" class="retro-btn">Add First Product</a>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    @if (ViewBag.TotalPages > 1)
    {
        <div class="pagination-container">
            <div class="pagination retro-pagination">
                @if (ViewBag.CurrentPage > 1)
                {
                    <a href="@Url.Action("ManageProducts", "Admin", new {
                        page = ViewBag.CurrentPage - 1,
                        search = ViewBag.SearchTerm,
                        brand = ViewBag.SelectedBrand,
                        status = ViewBag.SelectedStatus
                    })" class="page-btn retro-font-8bit">â€¹ Previous</a>
                }

                @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                {
                    if (i == ViewBag.CurrentPage)
                    {
                        <span class="page-btn current retro-font-8bit">@i</span>
                    }
                    else
                    {
                        <a href="@Url.Action("ManageProducts", "Admin", new {
                            page = i,
                            search = ViewBag.SearchTerm,
                            brand = ViewBag.SelectedBrand,
                            status = ViewBag.SelectedStatus
                        })" class="page-btn retro-font-8bit">@i</a>
                    }
                }

                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <a href="@Url.Action("ManageProducts", "Admin", new {
                        page = ViewBag.CurrentPage + 1,
                        search = ViewBag.SearchTerm,
                        brand = ViewBag.SelectedBrand,
                        status = ViewBag.SelectedStatus
                    })" class="page-btn retro-font-8bit">Next â€º</a>
                }
            </div>

            <div class="pagination-info retro-font-8bit">
                Page @ViewBag.CurrentPage of @ViewBag.TotalPages
                (@ViewBag.TotalProducts total products)
            </div>
        </div>
    }

    <div class="famicom-cartridge-slot"></div>
</div>

<style>
    .manage-products-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 2rem;
        background: linear-gradient(135deg, #1a0b2e 0%, #2a1144 100%);
        min-height: 100vh;
        color: white;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .page-header h1 {
        color: #ffcc33;
        margin: 0;
        font-size: 2.5rem;
    }

    .header-actions {
        display: flex;
        gap: 1rem;
    }

    .action-btn {
        background: linear-gradient(135deg, #2a1144 0%, #3a1f5d 100%);
        border: 2px solid #e6007e;
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s;
        font-family: 'VT323', monospace;
        font-size: 1.1rem;
        cursor: pointer;
    }

    .action-btn:hover {
        border-color: #ffcc33;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(230, 0, 126, 0.3);
        color: white;
        text-decoration: none;
    }

    .add-btn {
        border-color: #4caf50;
        color: #4caf50;
    }

    .add-btn:hover {
        background: #4caf50;
        color: white;
        border-color: #4caf50;
    }

    .search-filter-section {
        background: rgba(0, 0, 0, 0.2);
        border: 2px solid #666;
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .search-form {
        display: flex;
        gap: 1rem;
        align-items: center;
        flex-wrap: wrap;
    }

    .search-group {
        display: flex;
        border: 2px solid #666;
        border-radius: 6px;
        overflow: hidden;
    }

    .search-input {
        background: rgba(0, 0, 0, 0.3);
        border: none;
        color: white;
        padding: 0.75rem;
        font-family: 'VT323', monospace;
        font-size: 1.1rem;
        min-width: 300px;
    }

    .search-input:focus {
        outline: none;
        background: rgba(0, 0, 0, 0.5);
    }

    .search-btn {
        background: #e6007e;
        border: none;
        color: white;
        padding: 0.75rem 1rem;
        cursor: pointer;
        transition: background 0.3s;
    }

    .search-btn:hover {
        background: #ff1493;
    }

    .filter-group {
        display: flex;
        gap: 0.5rem;
    }

    .filter-select {
        background: rgba(0, 0, 0, 0.3);
        border: 2px solid #666;
        border-radius: 6px;
        color: white;
        padding: 0.75rem;
        font-family: 'VT323', monospace;
        font-size: 1rem;
    }

    .filter-select:focus {
        border-color: #e6007e;
        outline: none;
    }

    .products-table-container {
        background: rgba(0, 0, 0, 0.2);
        border: 2px solid #666;
        border-radius: 8px;
        overflow-x: auto;
        margin-bottom: 2rem;
    }

    .products-table {
        width: 100%;
        border-collapse: collapse;
        font-family: 'VT323', monospace;
        font-size: 1.1rem;
    }

    .products-table th {
        background: linear-gradient(135deg, #2a1144 0%, #3a1f5d 100%);
        color: #ffcc33;
        padding: 1rem;
        text-align: left;
        border-bottom: 2px solid #e6007e;
        position: sticky;
        top: 0;
        z-index: 10;
    }

    .products-table td {
        padding: 1rem;
        border-bottom: 1px solid rgba(230, 0, 126, 0.2);
        color: white;
    }

    .product-row:hover {
        background: rgba(230, 0, 126, 0.1);
    }

    .sort-link {
        color: #ffcc33;
        text-decoration: none;
        transition: color 0.3s;
    }

    .sort-link:hover {
        color: #e6007e;
        text-decoration: none;
    }

    .image-cell {
        width: 80px;
    }

    .product-thumbnail {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 6px;
        border: 2px solid #666;
    }

    .product-name {
        max-width: 200px;
    }

    .product-description {
        color: #ccc;
        font-size: 0.9rem;
        margin-top: 0.25rem;
    }

    .price-cell {
        color: #4caf50;
        font-weight: bold;
    }

    .stock-badge {
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.9rem;
        font-weight: bold;
    }

    .stock-badge.in-stock {
        background: rgba(76, 175, 80, 0.2);
        color: #4caf50;
        border: 1px solid #4caf50;
    }

    .stock-badge.low-stock {
        background: rgba(255, 152, 0, 0.2);
        color: #ff9800;
        border: 1px solid #ff9800;
    }

    .stock-badge.no-stock {
        background: rgba(244, 67, 54, 0.2);
        color: #f44336;
        border: 1px solid #f44336;
    }

    .status-badge {
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        font-size: 0.9rem;
        background: rgba(0, 0, 0, 0.3);
        border: 1px solid #666;
    }

    .status-badge.active {
        color: #4caf50;
        border-color: #4caf50;
    }

    .status-badge.discontinued {
        color: #ff9800;
        border-color: #ff9800;
    }

    .status-badge.out-of-stock {
        color: #f44336;
        border-color: #f44336;
    }

    .actions-cell {
        width: 120px;
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
    }

    .action-buttons .action-btn {
        padding: 0.5rem;
        font-size: 1rem;
        min-width: auto;
    }

    .edit-btn {
        border-color: #ffcc33;
        color: #ffcc33;
    }

    .edit-btn:hover {
        background: #ffcc33;
        color: #2a1144;
    }

    .view-btn {
        border-color: #2196f3;
        color: #2196f3;
    }

    .view-btn:hover {
        background: #2196f3;
        color: white;
    }

    .delete-btn {
        border-color: #f44336;
        color: #f44336;
        background: transparent;
    }

    .delete-btn:hover {
        background: #f44336;
        color: white;
    }

    .no-products {
        text-align: center;
        padding: 3rem;
    }

    .retro-message-box {
        background: rgba(0, 0, 0, 0.3);
        border: 2px solid #666;
        border-radius: 8px;
        padding: 2rem;
        display: inline-block;
    }

    .retro-message-box h3 {
        color: #ffcc33;
        margin-bottom: 1rem;
    }

    .retro-message-box p {
        color: #ccc;
        margin-bottom: 1rem;
    }

    .retro-btn {
        background: linear-gradient(135deg, #e6007e 0%, #ff1493 100%);
        border: 2px solid #e6007e;
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 6px;
        text-decoration: none;
        transition: all 0.3s;
    }

    .retro-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(230, 0, 126, 0.4);
        color: white;
        text-decoration: none;
    }

    /* Pagination */
    .pagination-container {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        gap: 1rem;
    }

    .pagination {
        display: flex;
        gap: 0.5rem;
    }

    .page-btn {
        background: linear-gradient(135deg, #2a1144 0%, #3a1f5d 100%);
        border: 2px solid #666;
        color: white;
        padding: 0.5rem 1rem;
        text-decoration: none;
        border-radius: 4px;
        transition: all 0.3s;
    }

    .page-btn:hover {
        border-color: #e6007e;
        color: white;
        text-decoration: none;
    }

    .page-btn.current {
        background: #e6007e;
        border-color: #e6007e;
        color: white;
    }

    .pagination-info {
        color: #ccc;
    }
 
</style> 